// --------------------------------- //
// Project: rogueDevelopment
// Start: Sunday, May 22, 2016
// IDE Version: 14.106


// SETCURRENTDIR("Media") // go to media files

TYPE mouse_TYPE
	x
	y
	b1
	b2
	b1_press
	b2_press
ENDTYPE

TYPE level_TYPE
	mapSizeX
	mapSizeY
	offsetX
	offsetY
ENDTYPE

TYPE map_TYPE

ENDTYPE

TYPE player_TYPE
	position AS position_TYPE
	
	runningSpeed
ENDTYPE

TYPE position_TYPE
	x
	y
ENDTYPE

GLOBAL level AS level_TYPE, map[] AS map_TYPE, player AS player_TYPE, mouse AS mouse_TYPE

main()

FUNCTION main:

	init()
	level.mapSizeX = 32
	level.mapSizeY = 16

	checkMap()


	
	player.runningSpeed = 2

	WHILE TRUE
		system_mouse()
		getInput()
		drawUpdate()
		
		PRINT  player.position.x + " " + player.position.y, 0, 0
		
		SHOWSCREEN
	WEND

ENDFUNCTION

FUNCTION init:
	SYSTEMPOINTER TRUE
	AUTOPAUSE FALSE
ENDFUNCTION

FUNCTION loader:

ENDFUNCTION

FUNCTION drawUpdate:

	drawMap()
	drawPlayer()

ENDFUNCTION

FUNCTION drawPlayer:

	DRAWRECT 496, 368, 32, 32, RGB(128, 0, 255)
	
	drawShotDirection()
	checkPositionPlayer()

ENDFUNCTION

FUNCTION drawShotDirection:
LOCAL phi, x, y, posX, posY

	x = mouse.x - 512
	y = mouse.y - 384
	phi = ATAN (y, x)
	
	posX = COS(phi) * 50
	posY = SIN(phi) * 50
	
	DRAWLINE 512, 384, 512 + posX, 384 + posY, RGB(0, 255, 0)

ENDFUNCTION

FUNCTION drawMap:
LOCAL tmpX, tmpY



	FOR tmpY = 0 TO level.mapSizeY - 1
		FOR tmpX = 0 TO level.mapSizeX - 1
			DRAWRECT level.offsetX + (tmpX * 32) + player.position.x, level.offsetY + (tmpY * 32) + player.position.y, 32, 32, RGB(255, 0, 0)
			DRAWRECT level.offsetX + 1 + (tmpX * 32) + player.position.x, level.offsetY + 1 + (tmpY * 32) + player.position.y, 30, 30, RGB(128, 64, 32)
		NEXT
	NEXT

ENDFUNCTION

FUNCTION getInput:

	// Rauf
	IF KEY(17) = 1
		INC player.position.y, player.runningSpeed * GETTIMER() * 0.1
	ENDIF
	
	// Runter
	IF KEY(31) = 1
		DEC player.position.y, player.runningSpeed * GETTIMER() * 0.1
	ENDIF
	
	// Links
	IF KEY(30) = 1
		INC player.position.x, player.runningSpeed * GETTIMER() * 0.1
	ENDIF
	
	// Rechts
	IF KEY(32) = 1
		DEC player.position.x, player.runningSpeed * GETTIMER() * 0.1
	ENDIF

ENDFUNCTION

FUNCTION system_mouse:
// ==================
// Mouse Routine v1.3
// ==================
LOCAL x, y, b1, b2, b1_press, b2_press
STATIC b1_tmp, b2_tmp, press_init, press_timer_old

	MOUSESTATE x, y, b1_press, b2_press

		mouse.x = x
		mouse.y = y

	IF b1_press = FALSE
		b1 = FALSE
		press_init = FALSE
	ENDIF
	IF b1_press = TRUE
		b1_tmp = TRUE
		IF press_init = FALSE
			press_timer_old = GETTIMERALL() + 50000
			press_init = TRUE
		ENDIF
	ENDIF
	IF b1_press = FALSE AND b1_tmp = TRUE AND GETTIMERALL() <= press_timer_old
		b1 = TRUE
		b1_tmp = FALSE
	ENDIF

	IF b2_press = FALSE THEN b2 = FALSE
	IF b2_press = TRUE THEN b2_tmp = TRUE
	IF b2_press = FALSE AND b2_tmp = TRUE
		b2 = TRUE
		b2_tmp = FALSE
	ENDIF

	mouse.b1 = b1
	mouse.b2 = b2
	mouse.b1_press = b1_press
	mouse.b2_press = b2_press

ENDFUNCTION

FUNCTION checkPositionPlayer:

	IF player.position.y < ((level.mapSizeY / 2) * 32) * -1 + 16
		player.position.y = ((level.mapSizeY / 2) * 32) * -1 + 16
	ENDIF

	IF player.position.y > ((level.mapSizeY / 2) * 32) - 16
		player.position.y = ((level.mapSizeY / 2) * 32) - 16
	ENDIF

	IF player.position.x < ((level.mapSizeX / 2) * 32) * -1 + 16
		player.position.x = ((level.mapSizeX / 2) * 32) * -1 + 16
	ENDIF

	IF player.position.x > ((level.mapSizeX / 2) * 32) - 16
		player.position.x = ((level.mapSizeX / 2) * 32) - 16
	ENDIF

ENDFUNCTION

FUNCTION checkMap:

	level.offsetX = 512 - ((level.mapSizeX / 2) * 32)
	level.offsetY = 384 - ((level.mapSizeY / 2) * 32)

ENDFUNCTION